<%- include('../partials/header') %>

<style>
  body {
    background: linear-gradient(135deg, #1a2980 0%, #26d0ce 100%);
    background-attachment: fixed;
    padding-top: 54px;
    min-height: 100vh;
    margin: 0;
    font-family: 'Segoe UI', Arial, sans-serif;
    /* X√≥a flex ƒë·ªÉ footer lu√¥n ·ªü d∆∞·ªõi */
    display: block;
  }
  body::before {
    content: '';
    position: fixed;
    top: 0; left: 0; width: 100vw; height: 100vh;
    background: repeating-linear-gradient(135deg, rgba(0,123,255,0.08) 0 2px, transparent 2px 40px), repeating-linear-gradient(45deg, rgba(38,208,206,0.06) 0 2px, transparent 2px 40px);
    pointer-events: none;
    z-index: 0;
    opacity: 0.7;
    mix-blend-mode: lighten;
  }
  .main-flex {
    display: flex;
    flex-direction: column;
    gap: 32px;
    max-width: 900px;
    margin: 48px auto 0 auto;
    padding: 0 8px;
    min-height: calc(100vh - 54px - 60px); /* header 54px, footer 60px */
    box-sizing: border-box;
  }
  .create-shop-container {
    max-width: 370px;
    background: #fff;
    border-radius: 16px;
    box-shadow: 0 4px 24px rgba(0,0,0,0.10);
    padding: 32px 24px 24px 24px;
    box-sizing: border-box;
    margin: 0 auto 24px auto;
    width: 100%;
  }
  .create-shop-container h2 {
    text-align: center;
    margin-bottom: 28px;
    color: #2d3a4b;
    font-size: 1.5em;
    letter-spacing: 1px;
  }
  .create-shop-container label {
    display: block;
    margin-bottom: 7px;
    color: #444;
    font-weight: 500;
    font-size: 1em;
    transition: color 0.2s;
  }
  .create-shop-container input[type="text"],
  .create-shop-container input[type="email"] {
    width: 100%;
    padding: 12px 14px;
    margin-bottom: 22px;
    border: 1.5px solid #e0e0e0;
    border-radius: 8px;
    font-size: 1em;
    background: #fafbfc;
    transition: border 0.2s, box-shadow 0.2s;
    box-sizing: border-box;
  }
  .create-shop-container input:focus {
    border: 1.5px solid #007bff;
    outline: none;
    background: #fff;
    box-shadow: 0 2px 8px rgba(0,123,255,0.08);
  }
  .create-shop-container button[type="submit"] {
    width: 100%;
    padding: 13px;
    background: linear-gradient(90deg, #007bff 60%, #00c6ff 100%);
    color: #fff;
    border: none;
    border-radius: 8px;
    font-size: 1.1em;
    font-weight: bold;
    cursor: pointer;
    transition: background 0.2s, box-shadow 0.2s;
    margin-top: 8px;
    box-shadow: 0 2px 8px rgba(0,123,255,0.07);
  }
  .create-shop-container button[type="submit"]:hover {
    background: linear-gradient(90deg, #0056b3 60%, #009ec3 100%);
  }
  .shop-list-container {
    max-width: 370px;
    background: #fff;
    border-radius: 16px;
    box-shadow: 0 4px 24px rgba(0,0,0,0.10);
    padding: 24px 18px 18px 18px;
    box-sizing: border-box;
    margin: 0 auto 24px auto;
    width: 100%;
  }
  .shop-list-container h3 {
    text-align: center;
    margin-bottom: 18px;
    color: #2d3a4b;
    font-size: 1.2em;
    letter-spacing: 1px;
  }
  .shop-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .shop-list li {
    padding: 10px 0;
    border-bottom: 1px solid #eee;
    color: #333;
    font-size: 1em;
  }
  .shop-list li:last-child {
    border-bottom: none;
  }
  @media (max-width: 480px) {
    .create-shop-container {
      margin: 24px 4px;
      padding: 20px 8px 16px 8px;
      border-radius: 10px;
      box-shadow: 0 2px 12px rgba(0,0,0,0.08);
    }
    .create-shop-container h2 {
      font-size: 1.2em;
    }
    .create-shop-container input,
    .create-shop-container button[type="submit"] {
      font-size: 1em;
      padding: 10px 8px;
    }
  }
  @media (max-width: 600px) {
      .create-shop-container {
        margin: 24px 4px;
        padding: 20px 8px 16px 8px;
        border-radius: 10px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
      }
      .create-shop-container h2 {
        font-size: 1.2em;
      }
      .create-shop-container input,
      .create-shop-container button[type="submit"] {
        font-size: 1em;
        padding: 10px 8px;
      }
      .main-flex {
        min-height: calc(100vh - 54px - 60px);
      }
    }
  @media (min-width: 900px) {
    .main-flex {
      flex-direction: row;
      align-items: flex-start;
      gap: 40px;
      min-height: calc(100vh - 54px - 60px);
    }
    .create-shop-container, .shop-list-container {
      max-width: 420px;
      width: 100%;
      margin: 0;
    }
    .create-shop-container {
      margin-right: 0;
    }
    .shop-list-container {
      margin-left: 0;
    }
  }
  /* ƒê·∫£m b·∫£o footer lu√¥n ·ªü d∆∞·ªõi c√πng */
  html, body {
    height: 100%;
  }
  body {
    min-height: 100vh;
    position: relative;
    padding-bottom: 0; /* b·ªè padding v√¨ footer kh√¥ng c√≤n fixed */
  }
  footer {
    position: static; /* chuy·ªÉn sang static ƒë·ªÉ kh√¥ng che n·ªôi dung */
    left: unset;
    bottom: unset;
    width: 100%;
    background: #f7f7f7;
    text-align: center;
    padding: 12px 0 8px 0;
    font-size: 0.95em;
    color: #888;
    z-index: 10;
  }
  .edit-btn {
    background: #ffc107;
    color: #222;
    border: none;
    border-radius: 6px;
    padding: 5px 14px;
    margin-right: 6px;
    cursor: pointer;
    font-size: 0.97em;
    transition: background 0.2s;
  }
  .edit-btn:hover {
    background: #ffb300;
  }
  .delete-btn {
    background: #ff4d4f;
    color: #fff;
    border: none;
    border-radius: 6px;
    padding: 5px 14px;
    cursor: pointer;
    font-size: 0.97em;
    transition: background 0.2s;
  }
  .delete-btn:hover {
    background: #d9363e;
  }
  .modal {
    display: flex;
    position: fixed;
    z-index: 9999;
    left: 0; top: 0; width: 100vw; height: 100vh;
    background: rgba(0,0,0,0.18);
    align-items: center;
    justify-content: center;
  }
  .modal-content {
    background: #fff;
    border-radius: 12px;
    padding: 28px 22px 18px 22px;
    min-width: 320px;
    max-width: 96vw;
    box-shadow: 0 4px 24px rgba(0,0,0,0.13);
    position: relative;
  }
  .modal-content .close {
    position: absolute;
    right: 16px;
    top: 10px;
    font-size: 1.5em;
    color: #888;
    cursor: pointer;
  }
  .modal-content h3 {
    margin-top: 0;
    margin-bottom: 18px;
    text-align: center;
  }
  .modal-content form > div {
    margin-bottom: 12px;
  }
  .modal-content label {
    display: block;
    margin-bottom: 4px;
    color: #444;
    font-weight: 500;
    font-size: 1em;
  }
  .modal-content input[type="text"],
  .modal-content input[type="email"] {
    width: 100%;
    padding: 8px 10px;
    border: 1.2px solid #e0e0e0;
    border-radius: 7px;
    font-size: 1em;
    background: #fafbfc;
    margin-bottom: 2px;
  }
  .shop-search-bar {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 12px;
    background: #f5f7fa;
    border-radius: 8px;
    padding: 6px 10px;
    border: 1.5px solid #e0e0e0;
    box-shadow: 0 1px 4px rgba(0,0,0,0.03);
  }
  .shop-search-bar .search-icon {
    display: flex;
    align-items: center;
    margin-right: 4px;
  }
  .shop-search-bar input[type="text"] {
    flex: 1;
    border: none;
    background: transparent;
    font-size: 1em;
    padding: 7px 0 7px 0;
    outline: none;
    color: #222;
  }
  .shop-search-bar input[type="text"]:focus {
    background: #fff;
  }
  .shop-search-bar select {
    border: none;
    background: #f0f4fa;
    border-radius: 6px;
    padding: 6px 10px;
    font-size: 1em;
    color: #007bff;
    outline: none;
    transition: background 0.18s;
  }
  .shop-search-bar select:focus {
    background: #e6f0ff;
  }
</style>

<% if (typeof success !== 'undefined') { %>
  <div style="max-width:400px;margin:24px auto 0 auto;padding:12px 18px;background:#e6ffed;color:#207245;border-radius:8px;border:1px solid #b7eb8f;text-align:center;">
    <%= success %>
  </div>
<% } %>

<div class="main-flex">
  <div class="create-shop-container">
    <h2>T·∫°o Shop m·ªõi</h2>
    <form method="POST" action="/admin/shops/create" enctype="multipart/form-data">
      <div>
        <label for="name">T√™n Shop</label>
        <input id="name" name="name" type="text" placeholder="T√™n Shop" required />
      </div>
      <div>
        <label for="slug">Slug (vi·∫øt kh√¥ng d·∫•u, kh√¥ng c√°ch)</label>
        <input id="slug" name="slug" type="text" placeholder="Slug" required />
      </div>
      <div>
        <label for="owner">Ch·ªß shop</label>
        <input id="owner" name="owner" type="text" placeholder="Ch·ªß shop" required />
      </div>
      <div>
        <label for="email">Email</label>
        <input id="email" name="email" type="email" placeholder="Email" required />
      </div>
      <div>
        <label for="logo">Logo shop (t√πy ch·ªçn)</label>
        <input id="logo" name="logo" type="file" accept="image/*" style="margin-bottom:18px;" />
      </div>
      <div>
        <label for="adminUsername">T√†i kho·∫£n ƒëƒÉng nh·∫≠p Shop (username)</label>
        <input id="adminUsername" name="adminUsername" type="text" placeholder="T√™n ƒëƒÉng nh·∫≠p Shop" required autocomplete="username" />
      </div>
      <div style="position:relative;">
        <label for="adminPassword">M·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p Shop</label>
        <input id="adminPassword" name="adminPassword" type="password" placeholder="M·∫≠t kh·∫©u Shop" required autocomplete="new-password" style="padding-right:36px;" />
        <span class="toggle-password" onclick="togglePassword('adminPassword', this)" style="position:absolute;right:10px;top:38px;cursor:pointer;user-select:none;">üëÅÔ∏è</span>
      </div>
      <div style="position:relative;">
        <label for="adminPasswordConfirm">X√°c nh·∫≠n l·∫°i m·∫≠t kh·∫©u</label>
        <input id="adminPasswordConfirm" name="adminPasswordConfirm" type="password" placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" required autocomplete="new-password" style="padding-right:36px;" />
        <span class="toggle-password" onclick="togglePassword('adminPasswordConfirm', this)" style="position:absolute;right:10px;top:38px;cursor:pointer;user-select:none;">üëÅÔ∏è</span>
      </div>
      <button type="submit">T·∫°o shop</button>
    </form>
  </div>
  <div class="shop-list-container">
    <h3>Danh s√°ch Shop</h3>
    <div class="shop-search-bar">
      <span class="search-icon">
        <svg width="18" height="18" viewBox="0 0 20 20" fill="none"><circle cx="9" cy="9" r="7" stroke="#888" stroke-width="2"/><path d="M15.5 15.5L13 13" stroke="#888" stroke-width="2" stroke-linecap="round"/></svg>
      </span>
      <input type="text" id="shopSearch" placeholder="T√¨m ki·∫øm shop..." autocomplete="off">
      <select id="shopLimit">
        <option value="10">10</option>
        <option value="20">20</option>
        <option value="50">50</option>
        <option value="100">100</option>
      </select>
    </div>
    <ul class="shop-list" id="shopList">
      <% if (shops && shops.length > 0) { %>
        <% shops.forEach(function(shop) { %>
          <li data-name="<%= shop.name %>" data-slug="<%= shop.slug %>" data-owner="<%= shop.owner %>" data-email="<%= shop.email %>">
            <strong><%= shop.name %></strong><br>
            <span style="font-size:0.95em;color:#888;">Slug: <%= shop.slug %></span><br>
            <span style="font-size:0.95em;color:#888;">Ch·ªß shop: <%= shop.owner %></span><br>
            <span style="font-size:0.95em;color:#888;">Email: <%= shop.email %></span>
            <div style="margin-top:8px;">
              <button class="edit-btn"
                data-id="<%= shop.id %>"
                data-name="<%= shop.name %>"
                data-slug="<%= shop.slug %>"
                data-owner="<%= shop.owner %>"
                data-email="<%= shop.email %>"
                data-logo="<%= shop.logo ? shop.logo : '' %>"
                onclick="openEditModalFromButton(this)">S·ª≠a</button>
              <button class="delete-btn"
                data-id="<%= shop.id %>"
                data-name="<%= shop.name %>"
                onclick="openDeleteModalFromButton(this)">Xo√°</button>
              <a href="/shop/<%= shop.slug %>/login" class="edit-btn" style="background:#007bff;color:#fff;margin-left:6px;">ƒêƒÉng nh·∫≠p Shop</a>
            </div>
          </li>
        <% }) %>
      <% } else { %>
        <li>Ch∆∞a c√≥ shop n√†o.</li>
      <% } %>
    </ul>
  </div>
</div>

<!-- Modal S·ª≠a Shop -->
<div id="editModal" class="modal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeEditModal()">&times;</span>
    <h3>S·ª≠a th√¥ng tin Shop</h3>
    <form id="editForm" method="POST" enctype="multipart/form-data">
      <input type="hidden" name="id" id="edit-id" />
      <div>
        <label for="edit-name">T√™n Shop</label>
        <input id="edit-name" name="name" type="text" required />
      </div>
      <div>
        <label for="edit-slug">Slug</label>
        <input id="edit-slug" name="slug" type="text" required />
      </div>
      <div>
        <label for="edit-owner">Ch·ªß shop</label>
        <input id="edit-owner" name="owner" type="text" required />
      </div>
      <div>
        <label for="edit-email">Email</label>
        <input id="edit-email" name="email" type="email" required />
      </div>
      <div>
        <label for="edit-username">T√†i kho·∫£n ƒëƒÉng nh·∫≠p Shop (username)</label>
        <input id="edit-username" name="username" type="text" placeholder="T√™n ƒëƒÉng nh·∫≠p Shop" required autocomplete="username" />
      </div>
      <div id="edit-logo-preview" style="margin-bottom:10px;text-align:center;"></div>
      <div>
        <label for="edit-logo">Logo shop (n·∫øu mu·ªën thay ƒë·ªïi)</label>
        <input id="edit-logo" name="logo" type="file" accept="image/*" />
      </div>
      <div style="position:relative;">
        <label for="edit-password">M·∫≠t kh·∫©u m·ªõi (n·∫øu mu·ªën ƒë·ªïi)</label>
        <input id="edit-password" name="password" type="password" placeholder="ƒê·ªÉ tr·ªëng n·∫øu kh√¥ng ƒë·ªïi" autocomplete="new-password" style="padding-right:36px;" />
        <span class="toggle-password" onclick="togglePassword('edit-password', this)" style="position:absolute;right:10px;top:38px;cursor:pointer;user-select:none;">üëÅÔ∏è</span>
      </div>
      <div style="position:relative;">
        <label for="edit-password-confirm">X√°c nh·∫≠n l·∫°i m·∫≠t kh·∫©u m·ªõi</label>
        <input id="edit-password-confirm" name="passwordConfirm" type="password" placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi" autocomplete="new-password" style="padding-right:36px;" />
        <span class="toggle-password" onclick="togglePassword('edit-password-confirm', this)" style="position:absolute;right:10px;top:38px;cursor:pointer;user-select:none;">üëÅÔ∏è</span>
      </div>
      <button type="submit" class="edit-btn">L∆∞u thay ƒë·ªïi</button>
    </form>
  </div>
</div>

<!-- Modal Xo√° Shop -->
<div id="deleteModal" class="modal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeDeleteModal()">&times;</span>
    <h3>X√°c nh·∫≠n xo√° Shop</h3>
    <p id="deleteMsg"></p>
    <form id="deleteForm" method="POST">
      <input type="hidden" name="id" id="delete-id" />
      <button type="submit" class="delete-btn">Xo√°</button>
      <button type="button" onclick="closeDeleteModal()">Hu·ª∑</button>
    </form>
  </div>
</div>

<script>
  // S·ª≠a shop
  function openEditModal(id, name, slug, owner, email, logo) {
    document.getElementById('edit-id').value = id;
    document.getElementById('edit-name').value = name;
    document.getElementById('edit-slug').value = slug;
    document.getElementById('edit-owner').value = owner;
    document.getElementById('edit-email').value = email;
    document.getElementById('editForm').action = '/admin/shops/edit/' + id;
    // Hi·ªÉn th·ªã logo hi·ªán t·∫°i n·∫øu c√≥
    var preview = document.getElementById('edit-logo-preview');
    if (logo) {
      var logoSrc = logo.startsWith('uploads/') ? '/' + logo : '/uploads/' + logo;
      preview.innerHTML = '<div style="margin-bottom:6px;">Logo hi·ªán t·∫°i:</div><img src="' + logoSrc + '" alt="Logo shop" style="max-width:80px;max-height:80px;border-radius:8px;box-shadow:0 2px 8px #ccc;margin-bottom:4px;">';
    } else {
      preview.innerHTML = '<div style="color:#aaa;font-size:0.97em;">Ch∆∞a c√≥ logo</div>';
    }
    // N·∫øu c√≥ username (c·∫ßn truy·ªÅn th√™m khi g·ªçi openEditModal)
    if (typeof arguments[6] !== 'undefined') {
      document.getElementById('edit-username').value = arguments[6];
    }
    document.getElementById('editModal').style.display = 'flex';
  }
  function closeEditModal() {
    document.getElementById('editModal').style.display = 'none';
  }

  // Xo√° shop
  function openDeleteModal(id, name) {
    document.getElementById('delete-id').value = id;
    document.getElementById('deleteMsg').innerText = 'B·∫°n c√≥ ch·∫Øc mu·ªën xo√° shop "' + name + '"?';
    document.getElementById('deleteForm').action = '/admin/shops/delete/' + id;
    document.getElementById('deleteModal').style.display = 'flex';
  }
  function closeDeleteModal() {
    document.getElementById('deleteModal').style.display = 'none';
  }

  // T√¨m ki·∫øm v√† ph√¢n trang shop
  const allShopLis = Array.from(document.querySelectorAll('#shopList li[data-name]'));
  const shopListUl = document.getElementById('shopList');
  const searchInput = document.getElementById('shopSearch');
  const limitSelect = document.getElementById('shopLimit');

  function renderShopList() {
    const keyword = searchInput.value.trim().toLowerCase();
    const limit = parseInt(limitSelect.value, 10);
    let filtered = allShopLis.filter(li => {
      const name = li.getAttribute('data-name').toLowerCase();
      const slug = li.getAttribute('data-slug').toLowerCase();
      const owner = li.getAttribute('data-owner').toLowerCase();
      const email = li.getAttribute('data-email').toLowerCase();
      return (
        name.includes(keyword) ||
        slug.includes(keyword) ||
        owner.includes(keyword) ||
        email.includes(keyword)
      );
    });
    // Hi·ªÉn th·ªã t·ªëi ƒëa limit k·∫øt qu·∫£
    filtered = filtered.slice(0, limit);

    shopListUl.innerHTML = '';
    if (filtered.length === 0) {
      shopListUl.innerHTML = '<li>Kh√¥ng t√¨m th·∫•y shop ph√π h·ª£p.</li>';
    } else {
      filtered.forEach(li => shopListUl.appendChild(li));
    }
  }

  searchInput.addEventListener('input', renderShopList);
  limitSelect.addEventListener('change', renderShopList);

  // Kh·ªüi t·∫°o m·∫∑c ƒë·ªãnh
  renderShopList();

  // ƒê√≥ng modal khi click n·ªÅn t·ªëi
  window.onclick = function(event) {
    if (event.target === document.getElementById('editModal')) closeEditModal();
    if (event.target === document.getElementById('deleteModal')) closeDeleteModal();
  }

  // T·ª± ƒë·ªông t·∫°o slug khi nh·∫≠p t√™n shop
  document.getElementById('name').addEventListener('input', function() {
    const value = this.value
      .toLowerCase()
      .normalize('NFD').replace(/[\u0300-\u036f]/g, '') // b·ªè d·∫•u ti·∫øng Vi·ªát
      .replace(/[^a-z0-9\s-]/g, '') // b·ªè k√Ω t·ª± ƒë·∫∑c bi·ªát
      .replace(/\s+/g, '-')         // thay kho·∫£ng tr·∫Øng b·∫±ng -
      .replace(/-+/g, '-')          // b·ªè tr√πng d·∫•u -
      .replace(/^-+|-+$/g, '');     // b·ªè - ·ªü ƒë·∫ßu/cu·ªëi
    document.getElementById('slug').value = value;
  });

  // ·∫®n/hi·ªán m·∫≠t kh·∫©u
  function togglePassword(inputId, icon) {
    var input = document.getElementById(inputId);
    if (input.type === 'password') {
      input.type = 'text';
      icon.textContent = 'üôà';
    } else {
      input.type = 'password';
      icon.textContent = 'üëÅÔ∏è';
    }
  }
  // Ki·ªÉm tra x√°c nh·∫≠n m·∫≠t kh·∫©u khi submit
  document.querySelector('.create-shop-container form').addEventListener('submit', function(e) {
    var pw = document.getElementById('adminPassword').value;
    var pw2 = document.getElementById('adminPasswordConfirm').value;
    if (pw !== pw2) {
      alert('M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!');
      e.preventDefault();
      return false;
    }
  });
  // Ki·ªÉm tra x√°c nh·∫≠n m·∫≠t kh·∫©u khi s·ª≠a shop
  document.getElementById('editForm').addEventListener('submit', function(e) {
    var pw = document.getElementById('edit-password').value;
    var pw2 = document.getElementById('edit-password-confirm').value;
    if (pw || pw2) {
      if (pw !== pw2) {
        alert('M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!');
        e.preventDefault();
        return false;
      }
    }
  });

  // Th√™m 2 h√†m h·ªó tr·ª£ g·ªçi modal qua data attribute
  function openEditModalFromButton(btn) {
    openEditModal(
      btn.dataset.id,
      btn.dataset.name,
      btn.dataset.slug,
      btn.dataset.owner,
      btn.dataset.email,
      btn.dataset.logo, // truy·ªÅn logo filename
      btn.dataset.username // truy·ªÅn username
    );
  }
  function openDeleteModalFromButton(btn) {
    openDeleteModal(
      btn.dataset.id,
      btn.dataset.name
    );
  }
</script>

<%- include('../partials/footer') %>
